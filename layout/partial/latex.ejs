<!-- latex公式渲染 -->

<%
var temp_latex = 0;
if (page.latex == null) {
  temp_latex = 1;
} else if (page.latex == 2) {
  temp_latex = 2;
} else if (page.latex == 1) {
  temp_latex = 1;
}
%>

<script>
  document.temp_latex = '<%- temp_latex %>';// 全局变量,latex公式渲染方式
</script>

<% if (temp_latex == 1) { %>
<!-- mathjax -->
<script type="text/x-mathjax-config">
  console.log("mathjax rendering");
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [
        ['$','$']
      ],
      processEscapes: true,
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
    }
  });
  
  /*
  MathJax.Hub.Queue(function() { // 重新启动渲染
    var all = MathJax.Hub.getAllJax(), i;
    for (i = 0; i < all.length; i += 1) {
      all[i].SourceElement().parentNode.className += ' has-jax';
    }
  });
  */

  MathJax.Hub.Queue(["Typeset", MathJax.Hub])
</script>
<script type="text/javascript" src="<%- theme.latex.mathjax %>"></script>
<script>
  console.log("mathjax rendering");
</script>
<% } else if (temp_latex == 2) { %>

<!-- katex -->
<link rel="stylesheet" href="<%- theme.latex.katex %>/dist/katex.min.css" integrity="sha384-dbVIfZGuN1Yq7/1Ocstc1lUEm+AT+/rCkibIcC/OmWo5f0EA48Vf8CytHzGrSwbQ" crossorigin="anonymous">
<!-- The loading of KaTeX is deferred to speed up page rendering -->
<script defer src="<%- theme.latex.katex %>/dist/katex.min.js" integrity="sha384-2BKqo+exmr9su6dir+qCw08N2ZKRucY4PrGQPPWU1A7FtlCGjmEGFqXCv5nyM5Ij" crossorigin="anonymous"></script>
<!-- To automatically render math in text elements, include the auto-render extension: -->
<script defer src="<%- theme.latex.katex %>/dist/contrib/auto-render.min.js" integrity="sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI" crossorigin="anonymous"></script>

<script>
  console.log("katex rendering");
  // 删除<p>内部换行,使katex正确渲染
  $(document).ready(setTimeout(function()
  {
    for (var i = 0; i < 2; i ++) {
      if (i == 0) {
        var all_text = document.querySelectorAll("div div div p");
      } else {
        var all_text = document.querySelectorAll("li li");
      }
      all_text.forEach(function(temp_p){
        var my_child = temp_p.childNodes.length;
  
        for (var i = 0; i < my_child; i ++)
        {
          if (temp_p.childNodes[i].tagName == "BR")
          {
            temp_p.removeChild(temp_p.childNodes[i]);
            my_child --;
            i --;
          }
        }
        // 垃圾katex不能够跨行渲染,所以手动清除换行
        temp_p.innerHTML = temp_p.innerHTML.replace(/\$\$\$\$/g, "$$$$\n$$$$");
        temp_p.innerHTML = temp_p.innerHTML.replace(/\$\$\$/g, "$\n$$$$");
      });
    }
    /**/
    renderMathInElement(document.body,
    {
      // ...options...
      delimiters: [
        { left: "$$", right: "$$", display: true },
        { left: "$", right: "$", display: false }
        // { left: "\\[", right: "\\]", display: true }
      ]
    });
  }, 500));// 删除元素不能进行得太早,不然会和highlight的dfs冲突
</script>
<% } %>